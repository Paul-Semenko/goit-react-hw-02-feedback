{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Stats/Stats.jsx","App.jsx","index.js"],"names":["FeedbackOptions","this","props","good","neutral","bad","onClick","Component","Section","title","children","Notification","message","Statistics","total","positivePercentage","App","state","handleGoodButton","setState","prevState","handleNeutralButton","handleBadButton","countTotalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"2NAGqBA,E,4JACjB,WACI,MAA+BC,KAAKC,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACI,qCACI,wBAAQC,QAASH,EAAjB,kBACA,wBAAQG,QAASF,EAAjB,qBACA,wBAAQE,QAASD,EAAjB,wB,GAP6BE,aCe9BC,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACJC,MCIEC,MARf,YAAmC,IAAXC,EAAU,EAAVA,QACpB,OAAO,4BAAIA,KCAMC,E,4JACjB,WACI,MAAiEZ,KAAKC,MAA9DC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKS,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAAoBN,EAAvD,EAAuDA,MACvD,OACI,qCACI,6BAAKA,IACJK,EAAS,+BACN,wCAAWX,KACX,2CAAcC,KACd,uCAAUC,KACV,wCAAWS,KACX,oDAAuB,IAClBC,GAC0B,EAF/B,UAIM,cAAC,EAAD,CAAcH,QAAQ,6B,GAfRL,aCGlCS,E,4MACJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,iBAAmB,WAEjB,EAAKC,UAAS,SAAAC,GAAS,MAAI,CAACjB,KAAMiB,EAAUjB,KAAM,O,EAEpDkB,oBAAsB,WAEpB,EAAKF,UAAU,SAAAC,GAAS,MAAG,CAAChB,QAAQgB,EAAUhB,QAAS,O,EAEzDkB,gBAAkB,WAEhB,EAAKH,UAAU,SAAAC,GAAS,MAAG,CAACf,IAAIe,EAAUf,IAAK,O,4CAOjD,WACE,MAA+BJ,KAAKgB,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBkB,EAAqBpB,EAAOC,EAAUC,EAC5C,OAAQ,eAAC,EAAD,CAASI,MAAO,wBAAhB,UACN,cAAC,EAAD,CACEN,KAAMF,KAAKiB,iBACXd,QAASH,KAAKoB,oBACdhB,IAAKJ,KAAKqB,kBAGZ,cAAC,EAAD,CAAYb,MAAO,aACjBN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLS,MAAOS,EACPR,mBAAoBS,KAAKC,MAAOtB,EAAOoB,EAAsB,c,GAvCnDhB,aAgDHS,ICnDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAAC,EAAD,IAASE,SAASE,cAAc,Y","file":"static/js/main.eb73b97c.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FeedbackOptions extends Component{\r\n    render() {\r\n        const { good, neutral, bad } = this.props;\r\n        return (\r\n            <>\r\n                <button onClick={good}>Good</button>\r\n                <button onClick={neutral}>Neutral</button>\r\n                <button onClick={bad}>Bad</button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    good: PropTypes.func,\r\n    neutral: PropTypes.func,\r\n    bad:PropTypes.func,\r\n}","\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction  Notification({message}) {\r\n    return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport default class Statistics extends Component{\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage, title } = this.props;\r\n        return (\r\n            <>\r\n                <h2>{title}</h2>\r\n                {total ? (<ul>\r\n                    <li>Good: {good}</li>\r\n                    <li>Neutral: {neutral}</li>\r\n                    <li>Bad: {bad}</li>\r\n                    <li>Total:{total}</li>\r\n                    <li>Positive feedback:{' '}\r\n                        {positivePercentage\r\n                            ? positivePercentage : 0}%\r\n                    </li>\r\n                </ul>) : (<Notification message=\"No feedback given\" />)}\r\n            </>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from './components/Stats/Stats';\n\n\n\nclass App extends Component{\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    }\n  \n  handleGoodButton = () => {\n    \n    this.setState(prevState =>({good: prevState.good +1}))\n   }\n  handleNeutralButton = () => {\n    \n    this.setState( prevState=>({neutral:prevState.neutral +1}))\n  }\n  handleBadButton = () => {\n    \n    this.setState( prevState=>({bad:prevState.bad +1}))\n  }\n \n  \n  \n    \n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = good + neutral + bad;\n    return (<Section title={'Please leave feedback'}>\n      <FeedbackOptions\n        good={this.handleGoodButton}\n        neutral={this.handleNeutralButton}\n        bad={this.handleBadButton}\n      />\n      \n      <Statistics title={'Statistics'}\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback}\n        positivePercentage={Math.round((good / countTotalFeedback) * 100)}\n      />\n    \n    </Section>\n    );\n\n  }\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n"],"sourceRoot":""}